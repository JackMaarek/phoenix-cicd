name: Application Test and Deploy
on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: OTP ${{ matrix.otp }} | Elixir ${{ matrix.elixir }} | Node ${{ matrix.node }} | OS ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        otp: [22.2.4]
        elixir: [1.10.0]
        node: [12.x]

    services:
      db:
        image: postgres:11
        ports: ['5432:5432']
        options:
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: phoenixcicd_dev

    steps:
      - uses: actions/checkout@v1.0.0
      - uses: actions/setup-elixir@v1.0.0
        with:
          otp-version: 22.2.4
          elixir-version: 1.10.0
      - run: mix deps.get
      - run: mix test

  deploy:
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
    runs-on: ubuntu-latest

    needs: test

    steps:
      - uses: actions/checkout@v1.0.0
      - run: |+
          cat >~/.netrc <<EOF
          machine api.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
          machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
          EOF
      - run: heroku git:remote -a $(basename ${{ github.repository }})
      - run: git push heroku HEAD:refs/heads/master
      - run: heroku run "POOL_SIZE=2 mix ecto.migrate"
